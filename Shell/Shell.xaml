<controls:MetroWindow x:Class="Presentation.Shell.Shell"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:constants="clr-namespace:WPFPresentationCore;assembly=WPFPresentationCore"
        xmlns:core="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:mahaapps="clr-namespace:MahApps;assembly=MahApps.Metro"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:Converters="http://metro.mahapps.com/winfx/xaml/shared"
        xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
        xmlns:ve="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
        Title="Hello World" Height="350" Width="525" WindowState="Maximized">

    <controls:MetroWindow.Resources>
        <ResourceDictionary>
            <Style TargetType="Button">
                <Style.Setters>
                    <Setter Property="FontSize" Value="20" ></Setter>
                    <Setter Property="Foreground" Value="Teal" ></Setter>
                    <Setter Property="Background" Value="White" ></Setter>
                </Style.Setters>
            </Style>

            <ControlTemplate x:Key="AutoHideTrayElementsThemeKey_Caption" TargetType="ve:AutoHidePaneHeaderItem">
                <Grid x:Name="itemHeader" Background="#00000000" ve:DockPane.HitTestType="Header" Visibility="{Binding Path=Visibility}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background)" Storyboard.TargetName="border">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#FFCEE1F9" Offset="0" />
                                                    <GradientStop Color="#FFBFDAF7" Offset="1" />
                                                </LinearGradientBrush>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background)" Storyboard.TargetName="border">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <SolidColorBrush Color="#FFA5A8B0" />
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background)" Storyboard.TargetName="back">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <SolidColorBrush Color="#FF858890" />
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Normal" />
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="LocationStates">
                            <VisualState x:Name="Left">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="itemHeader">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>0,0,0,-1</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Padding)" Storyboard.TargetName="back">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>0,1,1,1</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="border">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <CornerRadius>0,3,3,0</CornerRadius>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="back">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <CornerRadius>0,2,2,0</CornerRadius>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Right">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="itemHeader">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>0,0,0,-1</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Padding)" Storyboard.TargetName="back">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>1,1,0,1</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="border">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <CornerRadius>3,0,0,3</CornerRadius>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="back">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <CornerRadius>2,0,0,2</CornerRadius>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Top">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="itemHeader">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>0,0,-1,0</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Padding)" Storyboard.TargetName="back">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>1,0,1,1</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="border">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <CornerRadius>0,0,3,3</CornerRadius>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="back">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <CornerRadius>0,0,2,2</CornerRadius>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Bottom">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)" Storyboard.TargetName="itemHeader">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>0,0,-1,0</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Padding)" Storyboard.TargetName="back">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Thickness>1,1,1,0</Thickness>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="border">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <CornerRadius>3,3,0,0</CornerRadius>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="back">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <CornerRadius>2,2,0,0</CornerRadius>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border x:Name="back" Opacity="1" Background="#FFB9BABF" Padding="1,1,1,1">
                        <Border x:Name="border" Background="#F2AE0C" />
                    </Border>
                    <ve:AutoHideTransformPanel x:Name="PART_TransformPanel">
                        <ve:AutoHideTransformPanel.Orientation>
                            <Binding Path="(ve:AutoHideTray.Orientation)" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <ve:OrientationInvertConverter />
                                </Binding.Converter>
                            </Binding>
                        </ve:AutoHideTransformPanel.Orientation>
                        <Border x:Name="front">
                            <ve:TabCaptionControl Foreground="White" FontWeight="Bold" x:Name="PART_CaptionControl" Margin="5,3,5,3" Width="{Binding Path=TabCaptionWidth}" />
                        </Border>
                    </ve:AutoHideTransformPanel>
                </Grid>
            </ControlTemplate>

            <Style TargetType="ve:AutoHidePaneHeaderItem">
                <Setter Property="Template" Value="{StaticResource AutoHideTrayElementsThemeKey_Caption}" />
            </Style>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <ResourceDictionary.MergedDictionaries>

                </ResourceDictionary.MergedDictionaries>
           
        </ResourceDictionary>

    </controls:MetroWindow.Resources>
    <controls:MetroWindow.Template>
        <ControlTemplate TargetType="{x:Type controls:MetroWindow}">

            <Grid Background="Transparent">
                <Grid Margin="{Binding BetaMargin}">
                    <Border Background="{DynamicResource ParcelWindowBG}"
                            BorderThickness="1"
                         BorderBrush="{DynamicResource SuccessBrush}">
                        <Grid Background="{DynamicResource ParcelWindowBG}">
                            <AdornerDecorator>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <!-- icon -->
                                        <ColumnDefinition Width="Auto" />
                                        <!-- left window commands -->
                                        <ColumnDefinition Width="Auto" />
                                        <!-- title -->
                                        <ColumnDefinition Width="*" />
                                        <!-- right window commands -->
                                        <ColumnDefinition Width="Auto" />
                                        <!-- min,max,close buttons -->
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Rectangle x:Name="PART_WindowTitleBackground"
                                               Focusable="False"
                                               Fill="{TemplateBinding WindowTitleBrush}"
                                               Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                               Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}"
                                               Grid.Column="0"
                                               Grid.ColumnSpan="5"
                                               StrokeThickness="0" />

                                    <!-- icon -->
                                    <ContentControl x:Name="PART_Icon"
                                                    Focusable="False"
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Panel.ZIndex="1"
                                                    Content="{TemplateBinding Icon}"
                                                    ContentTemplate="{TemplateBinding IconTemplate}"
                                                    HorizontalContentAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    MinWidth="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                    Height="16"
                                                    Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                    <!-- the left window commands -->
                                    <ContentPresenter x:Name="PART_LeftWindowCommands"
                                                      Focusable="False"
                                                      Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                      Panel.ZIndex="1"
                                                      Grid.Row="0"
                                                      Grid.Column="1"
                Grid.RowSpan="2"
                VerticalAlignment="Top"
                                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                      Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                    <!-- the title bar -->
                                    <ContentControl x:Name="PART_TitleBar"
                                                    Focusable="False"
                                                    Grid.Row="0"
                                                    Grid.Column="2"
                                                    ContentTemplate="{TemplateBinding TitleTemplate}"
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Stretch"
                                                    Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                    Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <ContentControl.Foreground>
                                            <MultiBinding
                                                Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                                <Binding ElementName="PART_WindowTitleBackground"
                                                         Path="Fill"
                                                         Mode="OneWay" />
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                         Path="TitleForeground"
                                                         Mode="OneWay" />
                                            </MultiBinding>
                                        </ContentControl.Foreground>
                                    </ContentControl>

                                    <!-- the right window commands -->
                                    <ContentPresenter x:Name="PART_RightWindowCommands"
                                                      Focusable="False"
                                                      Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                Panel.ZIndex="1"
                                                      Grid.Row="0"
                                                      Grid.Column="3"
                Grid.RowSpan="2"
                VerticalAlignment="Top"
                                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                      Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                    <!-- the window button commands -->
                                    <controls:WindowButtonCommands x:Name="PART_WindowButtonCommands"
                                                                      Focusable="False"
                                                                      Panel.ZIndex="1"
                                                                      Grid.Row="0"
                                                                      Grid.Column="4"
                                                                      Grid.RowSpan="2"
                                                                      VerticalAlignment="Top"
                                                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">

                                        <controls:WindowButtonCommands.Style>
                                            <Style TargetType="{x:Type controls:WindowButtonCommands}">
                                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="controls:WindowButtonCommands">
                                                            <ControlTemplate.Resources>
                                                                <ResourceDictionary>
                                                                    <Style TargetType="{x:Type Button}">
                                                                        <Setter Property="Background" Value="#02FFFFFF" />
                                                                        <Setter Property="HorizontalContentAlignment"
                                                                                Value="Center" />
                                                                        <Setter Property="VerticalContentAlignment"
                                                                                Value="Center" />
                                                                        <Setter Property="Padding" Value="1" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate
                                                                                    TargetType="{x:Type Button}">
                                                                                    <Grid
                                                                                        Background="{TemplateBinding Background}">
                                                                                        <ContentPresenter
                                                                                            x:Name="contentPresenter"
                                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                            RecognizesAccessKey="True"
                                                                                            Opacity="0.75"
                                                                                            Margin="11,1,11,1" />

                                                                                        <Rectangle x:Name="border"
                                                                                                   SnapsToDevicePixels="True"
                                                                                                   IsHitTestVisible="False"
                                                                                                   Opacity="0.25"
                                                                                                   Width="0"
                                                                                                   Height="15"
                                                                                                   VerticalAlignment="Stretch"
                HorizontalAlignment="Right"
                                                                                                   Fill="{TemplateBinding Foreground}"
                                                                                                   Margin="10,0,0,0" />
                                                                                    </Grid>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsMouseOver"
                                                                                                 Value="True">
                                                                                            <Setter
                                                                                                TargetName="contentPresenter"
                                                                                                Property="Opacity"
                                                                                                Value="1" />
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsMouseOver"
                                                                                                 Value="False">
                                                                                            <Setter
                                                                                                TargetName="contentPresenter"
                                                                                                Property="Opacity"
                                                                                                Value=".5" />
                                                                                        </Trigger>
                                                                                        <Trigger
                                                                                            Property="IsKeyboardFocused"
                                                                                            Value="true" />
                                                                                        <Trigger
                                                                                            Property="ToggleButton.IsChecked"
                                                                                            Value="true" />
                                                                                        <Trigger Property="IsEnabled"
                                                                                                 Value="false">
                                                                                            <Setter
                                                                                                Property="Foreground"
                                                                                                Value="#ADADAD" />
                                                                                        </Trigger>
                                                                                        <DataTrigger
                                                                                            Binding="{Binding RelativeSource={RelativeSource PreviousData}}"
                                                                                            Value="{x:Null}">
                                                                                            <Setter TargetName="border"
                                                                                                    Property="Rectangle.Width"
                                                                                                    Value="1" />
                                                                                        </DataTrigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.Triggers>
                                                                            <DataTrigger
                                                                                Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                                                Value="True">
                                                                                <Setter Property="Foreground"
                                                                                        Value="White" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </ResourceDictionary>
                                                            </ControlTemplate.Resources>

                                                            <StackPanel Orientation="Horizontal"
                                                                        VerticalAlignment="Top">
                                                                <ItemsControl IsTabStop="False"
                                                                              ItemsSource="{Binding Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:WindowCommands}}}">
                                                                    <ItemsControl.ItemsPanel>
                                                                        <ItemsPanelTemplate>
                                                                            <StackPanel Orientation="Horizontal" />
                                                                        </ItemsPanelTemplate>
                                                                    </ItemsControl.ItemsPanel>
                                                                </ItemsControl>
                                                                <Button x:Name="PART_Min"
                                                                        IsTabStop="False"
                                                                        Width="34"
                                                                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}"
                                                                        MaxHeight="34"
                                                                        Padding="0"
                                                                        ToolTip="{Binding Minimize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:WindowCommands}}}"
                                                                        Visibility="{Binding ShowMinButton, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                                    <Path Data="F1M0,6L0,9 9,9 9,6 0,6z"
                                                                          SnapsToDevicePixels="True"
                                                                          Fill="White" />
                                                                </Button>

                                                                <Button x:Name="PART_Max"
                                                                        IsTabStop="False"
                                                                        Width="34"
                                                                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}"
                                                                        MaxHeight="34"
                                                                        Padding="0"
                                                                        Foreground="White"
                                                                        Visibility="{Binding ShowMaxRestoreButton, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                        ToolTip="{Binding Maximize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:WindowCommands}}}">

                                                                    <Path x:Name="MaxPath" SnapsToDevicePixels="True"
                                                                          Fill="White" />
                                                                </Button>

                                                                <Button x:Name="PART_Close"
                                                                        IsTabStop="False"
                                                                        Width="34"
                                                                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}"
                                                                        MaxHeight="34"
                                                                        ToolTip="{Binding Close, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:WindowCommands}}}"
                                                                        Visibility="{Binding ShowCloseButton, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                        Foreground="White">
                                                                    <Path
                                                                        Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
                                                                        SnapsToDevicePixels="True"
                                                                        Fill="White" />
                                                                </Button>
                                                            </StackPanel>

                                                            <ControlTemplate.Triggers>
                                                                <DataTrigger
                                                                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}, Path=WindowState}"
                                                                    Value="Normal">
                                                                    <Setter TargetName="MaxPath" Property="Data"
                                                                            Value="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z" />
                                                                </DataTrigger>
                                                                <DataTrigger
                                                                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}, Path=WindowState}"
                                                                    Value="Maximized">
                                                                    <Setter TargetName="MaxPath" Property="Data"
                                                                            Value="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
                                                                </DataTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                        Value="True">
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource IdealForegroundColorBrush}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                        Value="False">
                                                        <Setter Property="Background" Value="Transparent" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </controls:WindowButtonCommands.Style>

                                    </controls:WindowButtonCommands>

                                    <!-- the main window content -->
                                    <controls:MetroContentControl Grid.Row="1"
                                                                     Grid.Column="0"
                                                                     Grid.ColumnSpan="5"
                                                                     IsTabStop="False"
                                                                     FocusVisualStyle="{x:Null}"
                                                                     OnlyLoadTransition="True"
                                                                     TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}">
                                        <ContentPresenter />
                                    </controls:MetroContentControl>

                                    <!-- disables the main content when a modal flyout is shown -->
                                    <Rectangle Grid.Row="0"
                                               Grid.RowSpan="2"
                                               Grid.ColumnSpan="5"
                                               Grid.Column="0"
                                               Name="PART_FlyoutModal"
                                               Fill="{DynamicResource BlackColorBrush}"
                                               Opacity="0.5"
                                               Visibility="Hidden" />

                                    <!-- flyouts -->
                                    <ContentControl Grid.Row="0"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="5"
                                                    Grid.RowSpan="2"
                                                    Panel.ZIndex="2"
                                                    Focusable="False"
                                                    KeyboardNavigation.TabNavigation="None"
                                                    Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                    VerticalAlignment="Stretch" />

                                    <!-- Used to create that overlay effect. Can be used for anything. -->
                                    <Grid Grid.Row="0"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="5"
                                          Grid.RowSpan="2"
                                          Panel.ZIndex="3"
                                          Focusable="False"
                                          FocusVisualStyle="{x:Null}"
                                          x:Name="PART_OverlayBox"
                                          Background="Transparent"
                                          Opacity="0"
                                          Visibility="Hidden" />

                                    <Grid Grid.Row="0"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="5"
                                          Grid.RowSpan="2"
                                          Panel.ZIndex="4"
                                          FocusVisualStyle="{x:Null}"
                                          x:Name="PART_MetroDialogContainer" />

                                    <!--<Rectangle Margin="5,0,0,0"
                                               Height="20"
                                               Width="24"
                                               Visibility="Visible"
                                HorizontalAlignment="Left">
                                <Rectangle.Fill>
                                            <VisualBrush Visual="{StaticResource CanvasAppIco}" />
                                </Rectangle.Fill>
                            </Rectangle>-->
                                    <Image
                  Margin="5,5,0,0"
                  Height="22" Width="139"
                  Visibility="Visible"
                  Source="owbEnbridge.png"
                  RenderOptions.EdgeMode="Aliased"
                  RenderOptions.BitmapScalingMode="HighQuality"
                  HorizontalAlignment="Left" />

                                </Grid>
                            </AdornerDecorator>

                            <ResizeGrip x:Name="WindowResizeGrip"
                                        HorizontalAlignment="Right"
                                        IsTabStop="false"
                                        Visibility="Collapsed"
                                        VerticalAlignment="Bottom" />
                        </Grid>
                    </Border>
                </Grid>
                <Image Source="Images/beta.png" Width="70" Height="70" VerticalAlignment="Top"
                       HorizontalAlignment="Left" Visibility="{Binding BetaVisibility}" />
            </Grid>

            <ControlTemplate.Resources>
                <Storyboard x:Key="OverlayFastSemiFadeIn"
                        BeginTime="0:0:0"
                        AccelerationRatio=".97"
                        Storyboard.TargetProperty="Opacity"
                        SpeedRatio="2.7">
                    <DoubleAnimation To=".7" />
                </Storyboard>
                <Storyboard x:Key="OverlayFastSemiFadeOut"
                        BeginTime="0:0:0"
                        AccelerationRatio=".97"
                        Storyboard.TargetProperty="Opacity"
                        SpeedRatio="2.7">
                    <DoubleAnimation To="0.0" />
                </Storyboard>
            </ControlTemplate.Resources>
            <ControlTemplate.Triggers>
                <!-- handle active/inactive state -->
                <!--<Trigger Property="IsActive"
                     Value="False">
                    <Setter TargetName="PART_WindowTitleBackground"
                        Property="Fill"
                        Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metroWindow:MetroWindow}}}" />
                    <Setter TargetName="PART_Border"
                        Property="BorderBrush"
                        Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metroWindow:MetroWindow}}}" />
                </Trigger>-->
                <!-- no icon and no icon content template -> collapse the icon content control -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Icon"
                               Value="{x:Null}" />
                        <Condition Property="IconTemplate"
                               Value="{x:Null}" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="PART_Icon"
                        Property="Visibility"
                        Value="Collapsed" />
                    <Setter TargetName="PART_Icon"
                        Property="MinWidth"
                        Value="0" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode"
                               Value="CanResizeWithGrip" />
                        <Condition Property="WindowState"
                               Value="Normal" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility"
                        TargetName="WindowResizeGrip"
                        Value="Visible" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </controls:MetroWindow.Template>
    

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            
        </Grid.RowDefinitions>
        <!--<dxdo:DockLayoutManager  Grid.Row="1">
            <dxdo:LayoutGroup Orientation="Vertical">
           
            <dxdo:LayoutPanel>
                    <Border Background="Black"
                                x:Name="MainBorder"
       
                               Margin="0,-33,0,0"
                                Focusable="True">
                        <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0"></RowDefinition>
                            <RowDefinition Height="*" ></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="*"
                                MinWidth="{x:Static constants:Constants.WindowMinimumWidth}" />
                            <ColumnDefinition
                            Width="Auto" />
                        </Grid.ColumnDefinitions>


                        <Border BorderBrush="Red"  Focusable="True"
                BorderThickness="0"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                Margin="0,0,0,0"></Border>
                        <Grid Grid.Row="1" Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" x:Name="rowTop" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" x:Name="rowBottom" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" x:Name="colDeals" />
                                <ColumnDefinition Width="*" x:Name="colShipments" />
                            </Grid.ColumnDefinitions>
                            <ContentControl     prism:RegionManager.RegionName="{x:Static constants:Constants.DealRegion}" ></ContentControl>

                            <ContentControl    Grid.Row="1" prism:RegionManager.RegionName="{x:Static constants:Constants.ShipmentsRegion}"></ContentControl>

                            <ContentControl    Grid.Column="1" prism:RegionManager.RegionName="{x:Static constants:Constants.ParcelRegion}"></ContentControl>
                            </Grid>
                    </Grid>
                </Border>
                </dxdo:LayoutPanel>
            </dxdo:LayoutGroup>
        </dxdo:DockLayoutManager>-->

        <dxdo:DockLayoutManager Margin="10,10,-10,-10" x:Name="dockLayoutManager1">
            <dxdo:DockLayoutManager.LayoutRoot>
                <dxdo:LayoutGroup Caption="LayoutRoot">
                    <dxdo:LayoutPanel x:Name="panel1" Caption="Panel1" />
                    <dxdo:LayoutPanel x:Name="panel2" Caption="Panel2" />
                </dxdo:LayoutGroup>
            </dxdo:DockLayoutManager.LayoutRoot>
            <dxdo:DockLayoutManager.AutoHideGroups>
                <dxdo:AutoHideGroup DockType="Left" DestroyOnClosingChildren="False">
                    <dxdo:LayoutPanel  Caption="Stock-in Details" x:Name="DataProcessingDatePanel" ItemHeight="400" ItemWidth="595" AllowHide="True" 
                                      AllowClose="False" AllowRestore="True" AllowSizing="False" AllowFloat="False" AllowDrag="False">
                        <Grid>
                            <TextBlock>This is Auto Hide groups</TextBlock>
                        </Grid>
                    </dxdo:LayoutPanel>
                </dxdo:AutoHideGroup>
            </dxdo:DockLayoutManager.AutoHideGroups>
        </dxdo:DockLayoutManager>
        
        <!--<ItemsControl Grid.Row="1" prism:RegionManager.RegionName="{x:Static constants:Constants.ContentRegion}"></ItemsControl>-->
    </Grid>
</controls:MetroWindow>



